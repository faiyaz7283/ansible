---
- name: Install and setup kubernetes cluster
  hosts: "{{ target_hosts | default('cla') }}"

  tasks:
    - name: "Change cgroup driver to systemd in {{ k8s_docker_daemon_json_file }}"
      become: yes
      copy:
        content: "{{ k8s_docker_cgroup_systemd_json_file | to_nice_json }}"
        dest: "{{ k8s_docker_daemon_json_file }}"
      register: cgroup_systemd
        
    - name: "Setup docker systemd service dir as {{ k8s_docker_systemd_service_dir }}"
      become: yes
      file:
        path: "{{ k8s_docker_systemd_service_dir }}"
        state: directory
      register: docker_systemd_dir

    - name: Reload daemon, restart and enable docker on boot
      become: yes
      systemd:
        daemon_reload: yes
        enabled: yes
        name: docker
        state: restarted
      when: cgroup_systemd is changed or docker_systemd_dir is changed
        
    - name: "Enable cgroup limit support in {{ boot_cmdline_txt_file }}"
      become: yes
      lineinfile:
        path: "{{ boot_cmdline_txt_file }}"
        line: "{{ item }}"
      loop: "{{ k8s_cgroup_limit_support_lines }}"
      register: cgroup_limit

    - name: Reboot
      become: yes
      when: cgroup_limit is changed
      reboot:
        
    - name: "Enable {{ k8s_required_modules | join(', ') }} module(s)"
      community.general.modprobe:
        name: "{{ item }}"
      loop: "{{ k8s_required_modules }}"
        
    - name: Let iptables see bridged traffic
      become: yes
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_file: "{{ k8s_sysctl_conf_file }}"
      loop: "{{ lookup('dict', k8s_sysctl_conf) }}"
      
    - name: Install packages to allow apt to use a repository over HTTPS
      become: yes
      apt:
        update_cache: yes
        cache_valid_time: 3600
        pkg: "{{ k8s_required_apt_pkgs }}"
        
    - name: Add google GPG apt key
      become: yes
      apt_key:
        url: "{{ k8s_gpg_url }}" 
        id: "{{ k8s_gpg_id }}"

    - name: Add kubernetes repository
      become: yes
      apt_repository:
        update_cache: yes
        repo: "{{ k8s_apt_repo }}"
        
    - name: "Installing {{ k8s_apt_pkgs | join(', ') }} apt packages"
      become: yes
      apt:
        update_cache: yes
        cache_valid_time: 3600
        pkg: "{{ k8s_apt_pkgs }}"        

    - name: "Hold {{ k8s_apt_pkgs | join(', ') }} apt packages from any system upgrades"
      become: yes
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop: "{{ k8s_apt_pkgs }}"
